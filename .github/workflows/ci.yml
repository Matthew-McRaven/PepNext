name: CI
run-name: CI
on: [push]
jobs:
  branch_info:
    name: Gather branch info
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch.outputs.branch }}
      not_default: ${{ steps.branch.outputs.not_default }}
    steps:
      - name: set branch info
        id: branch
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            export BRANCH="${GITHUB_REF##*/}"
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            export BRANCH="${$GITHUB_BASE_REF}"
          else
            echo "unknown event" && exit 1;
          fi
          if [ "$BRANCH" = "main" ]; then
            echo "not_default=false" >> $GITHUB_OUTPUT
          else
            echo "not_default=true" >> $GITHUB_OUTPUT
          fi
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          echo "Output is:"
          cat $GITHUB_OUTPUT

  start_matrix:
    needs: branch_info 
    uses: ./.github/workflows/build.yml
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: true
      # If you want to update images, must replace *ALL* images in the matrix manually.
      # Trying to use `env` or inputs will fail in this context.
      matrix:
        config:
        - {name: "Ubuntu 22.04; GCC", runs-on: "ubuntu-latest", image: "ghcr.io/matthew-mcraven/pepp/dev:0.8.2", compiler_launcher: "ccache", compiler_c: "", compiler_cpp: "", cmake_generator: "Ninja"}
        # Do CodeQL in clang run, to prevent needing yet another target.
        - {name: "Ubuntu 22.04; Clang 17.0", runs-on: "ubuntu-latest", image: "ghcr.io/matthew-mcraven/pepp/dev:0.8.2", triplet: "x64-linux-clang", compiler_launcher: "", compiler_c: "clang", compiler_cpp: "clang++", codeql: "True" , cmake_generator: "Ninja"}
        - {name: "Ubuntu 22.04; EMSDK 3.1.37", runs-on: "ubuntu-latest", image: "ghcr.io/matthew-mcraven/pepp/dev:0.8.2-wasm", cmake_toolchain: '$Qt6_DIR/qt.toolchain.cmake', cmake_xargs: '-D QT_HOST_PATH=/qt/6.6.0/gcc_64 -D Boost_INCLUDE_DIR=/usr/local/include',}
        #- {name: "Ubuntu 22.04; Docs", runson: "ubuntu-latest", image: "ghcr.io/matthew-mcraven/pepp/dev:0.8.2", docs_only: "True",}
        # See: https://bugreports.qt.io/browse/QTBUG-118086
        - {name: "MacOS-11; Clang 15", runs-on: "macos-11" , compiler_launcher: "ccache", compiler_c: '$(brew --prefix llvm@15)/bin/clang', compiler_cpp: '$(brew --prefix llvm@15)/bin/clang++', cmake_generator: "Ninja"}
        - {name: "Windows Latest; MSVC", runs-on: "windows-latest" , compiler_launcher: "ccache",}

    with:
      name: ${{ matrix.config.name }}
      runs-on: ${{ matrix.config.runs-on || 'ubuntu-latest' }}
      image: ${{ matrix.config.image || '' }}
      triplet: ${{ matrix.config.triplet || '' }}
      cmake_xargs: ${{ matrix.config.cmake_xargs || '' }}
      cmake_generator: ${{ matrix.config.cmake_generator || '' }}
      cmake_toolchain: ${{ matrix.config.cmake_toolchain || '3rd-party/vcpkg/scripts/buildsystems/vcpkg.cmake' }}
      compiler_launcher: ${{ matrix.config.compiler_launcher || '' }}
      compiler_c: ${{ matrix.config.compiler_c  || '' }}
      compiler_cpp: ${{ matrix.config.compiler_cpp || '' }}
      codeql: ${{ !!matrix.config.codeql }}
      variant: "debug"
      not_default: ${{ needs.branch_info.outputs.not_default || '' }}
